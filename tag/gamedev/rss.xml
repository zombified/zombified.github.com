<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Electric Froth</title>
        <link>http://joelkleier.com/</link>
        <description>This blog is mine. There are many like it, but this one is mine.</description>
        <language>en</language>
        <pubDate>Sun, 29 Sep 2013 05:00:00 GMT</pubDate>
        <docs>http://joelkleier.com/tag/gamedev/rss.xml</docs>
        <generator>acrylamid 0.7.6</generator>
        
            <item>
        <title>Postmortem for &#39;Grid Ten&#39;, my LD48#27 entry</title>
        <link>http://joelkleier.com/2013/09/postmortem-for-grid-ten-my-ld48-27-entry/</link>
        <description>&lt;p&gt;For the 27th &lt;a href=&#34;http://ludumdare.com&#34;&gt;Ludum Dare&lt;/a&gt; 48-hour game making competition, I created an
entry called &lt;em&gt;Grid Ten&lt;/em&gt;. It was my 6th entry into the competition, and needed
to be based around the theme &#39;10 Seconds&#39;. The competition voting isn&#39;t quite
over at the time of this writing, but here are my thoughts on how my game turned
out.&lt;/p&gt;
&lt;h4&gt;Timeline&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Pre- theme annoucement:&lt;/strong&gt; I had planned to use &lt;a href=&#34;http://inform7.com&#34;&gt;Inform 7&lt;/a&gt; or &lt;a href=&#34;http://www.gimcrackd.com/etc/src/&#34;&gt;Twine&lt;/a&gt; for
creating a text adventure, but I had also considered &lt;a href=&#34;http://haxe.org/&#34;&gt;Haxe&lt;/a&gt; with &lt;a href=&#34;http://haxeflixel.com/&#34;&gt;HaxeFlixel&lt;/a&gt;
or &lt;a href=&#34;http://haxepunk.com/&#34;&gt;HaxePunk&lt;/a&gt; as a fall-back if I didn&#39;t want to do a text adventure. Other
than that, I went into the competition with no substantial ideas for the direction
I wanted to go.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Theme Announcement:&lt;/strong&gt; The IRC chat room was full of hate for &#39;10 Seconds&#39;, and
I just knew this was the theme going to be picked. So, when it was announced,
I was already thinking about what I could do. Initially I started drafting some
sort of story that would revolve around using &#39;10 seconds&#39; in the context of a
lat/long coordinate. I actually spent a good 4 hours working on this concept
before going to bed for the night.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The next morning:&lt;/strong&gt; With the announcement happening only 4 or so hours before
I went to bed, it gave my subconcious a good chance to mull over what I had worked
on the night before. When I woke up, I started having doubts about my ideas from
the night before -- none of them were really &#39;gelling&#39; with me. So after about
2 hours, I came upon the core idea for what turned into &lt;em&gt;Grid Ten&lt;/em&gt;, which was
definitely not a text-adventure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The rest of the first day:&lt;/strong&gt; After getting the core concept for &lt;em&gt;Grid Ten&lt;/em&gt;
fleshed out a bit more, I decided to forgo Haxe, etc, and just work directly
with html/css/javascript. It&#39;s a toolset I&#39;m really familiar with, and my
concept would work very well with programmatically generated textures that I
thought would be easier to do with the canvas element than with HaxeFlixel or
HaxePunk. I also decided I didn&#39;t want a compile step in my development, nor
did I want to deal with flash. The majority of the work went really smooth,
I was really able to focus in on just the minimum code necessary -- I actually
had some code to implement tails for the enemies, but then I quickly saw that
that code would just bloat the game unnecessarily. It got cut out pretty quick,
I didn&#39;t just comment it out, I completely removed it. I didn&#39;t want anything
that would distract my focus. At the end of the day, I had the mechanics that
I was shooting for pretty well fleshed out. There was still a LOT to add to the
game, but the very core was in place!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Day 2:&lt;/strong&gt; I spent a good 7 hours polishing everything up -- I added some
primitive animations, another &#39;block&#39; the player could place, I also did some
optimizations and improved the &#39;intelligence&#39; of the enemies and added a menu,
and a end-game screen. Generally, I polished the thing up quit a bit. I did
stop early, around 3pm, to start the process of packaging and releasing. I&#39;ll
talk about this a bit more later, but I should have definitely kept at it for
at least another 2 or 3 hours.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Post- competition end:&lt;/strong&gt; I ended up fixing a bug whereby user placed blocks
would stick around after a reset. Small, and easily fixed, but I should have
totally caught that before submission!&lt;/p&gt;
&lt;h4&gt;The GOOD&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;I leveraged a platform that I know fairly well&lt;/li&gt;
&lt;li&gt;I stuck really well to a plan for absolute minimum viable product -- I didn&#39;t
    put a lot of extra cruft into the game that I didn&#39;t think significantly
    improved the experience. Take, for example, the start and end screens -- I
    put a large &#39;bouncing&#39; text on both screens which didn&#39;t add anything to
    game-play, but it made the start and end screens much less boring to look
    at, which is important for first impressions I think.&lt;/li&gt;
&lt;li&gt;I got plenty of sleep and food (always important!)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;The BAD&lt;/h4&gt;
&lt;p&gt;There are really only three things I think were really bad this time around:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I basically scratched and restarted what I was doing after about 6 hours
    total of development time. This hurt -- but, to be fair, I wasn&#39;t &#39;feeling&#39;
    the text-adventure I started with, and it was probably good for my sanity
    to restart with the game I did.&lt;/li&gt;
&lt;li&gt;I quit 2 or 3 hours earlier than I really should have, and in that time I
    probably could have done quite a lot of polishing.&lt;/li&gt;
&lt;li&gt;I used mostly original code -- I used zero game related engines/frameworks&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;The UGLY&lt;/h4&gt;
&lt;p&gt;Overall I&#39;m really happy with the project, and I think the core concept has a
lot of potential. I see a few ways that it could grow and change, and I&#39;m
actually pretty excited to continue working on this game in my down time.&lt;/p&gt;
&lt;p&gt;However, I think I&#39;ll probably end up re-writing most of it. The style I used
to code the game isn&#39;t sustainable I think... growing the project much larger
would hurt, especially adding some of the mechanics into it that I have ideas
for. I don&#39;t know that I&#39;ll have to write every piece of code from scratch, but
good chunks of it for sure.&lt;/p&gt;
&lt;p&gt;Otherwise, I think I&#39;ve gotten some fairly positive comments on my &lt;a href=&#34;http://www.ludumdare.com/compo/ludum-dare-27/?action=preview&amp;amp;uid=7263&#34;&gt;entry page&lt;/a&gt;,
and I got around a 2.5 out of 5, which is about where I was expecting this time
around. If there were more mechanics and more polish, then I think I would have
absolutely nailed it.&lt;/p&gt;
&lt;p&gt;Next time!&lt;/p&gt;</description>
        <pubDate>Sun, 29 Sep 2013 05:00:00 GMT</pubDate>
        <guid isPermaLink="false">tag:joelkleier.com,2013-09-29:/2013/09/postmortem-for-grid-ten-my-ld48-27-entry</guid>
    </item>
        
            <item>
        <title>Setting up a HaxePunk Project</title>
        <link>http://joelkleier.com/2013/03/setting-up-a-haxepunk-project/</link>
        <description>&lt;p&gt;&lt;strong&gt;Edit (2013-03-06):&lt;/strong&gt; updated title to reflect the post a little better&lt;/p&gt;
&lt;h4&gt;Setting up the development environment&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Setup the editor or IDE, I use vim, so install
     &lt;a href=&#34;https://github.com/jdonaldson/vaxe&#34;&gt;vaxe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go to &lt;a href=&#34;http://www.nme.io/download/&#34;&gt;www.nme.io/download/&lt;/a&gt; and follow the
     instructions&lt;/li&gt;
&lt;li&gt;Install HaxePunk: &lt;code&gt;haxelib install HaxePunk&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Setting up the project&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Create the project skeleton: &lt;code&gt;haxelib run HaxePunk new [project name]&lt;/code&gt;,
     replacing [project name] with the name of the folder to use for the project&lt;/li&gt;
&lt;li&gt;Edit &lt;code&gt;project.nmml&lt;/code&gt; with your project specific details&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;src/worlds&lt;/code&gt; folder to hold your world source files&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;src/entities&lt;/code&gt; folder to hold your entity source files&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Add some code to make a useable, but very basic HaxePunk project&lt;/h4&gt;
&lt;p&gt;Add this code to &lt;code&gt;src/worlds/Game.hx&lt;/code&gt;, it can be used as a very basic jumping
off point:&lt;/p&gt;
&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kr&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;worlds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;haxepunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;World&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;


&lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Game&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;World&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kr&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Then set HaxePunk to use that world as the active world by adding the following
to the end of the &lt;code&gt;init&lt;/code&gt; function in the &lt;code&gt;Main&lt;/code&gt; class (&lt;code&gt;src/Main.hx&lt;/code&gt;):&lt;/p&gt;
&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;HXP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;world&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;worlds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Game&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;Building the project&lt;/h4&gt;
&lt;p&gt;I like using neko to do a lot of my testing and development. It has faster build
times than for cpp, and I don&#39;t have to deal with flash (personal preference).&lt;/p&gt;
&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;$ &lt;/span&gt;nme &lt;span class=&#34;nb&#34;&gt;test &lt;/span&gt;project.nmml neko
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The &#39;test&#39; argument just tells nme to update (copy assets) and build the project,
then to run what was built right away. You can do lots of other things with nme, see the
nme documentation, or the command line help:&lt;/p&gt;
&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;$ &lt;/span&gt;nme &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;End thoughts&lt;/h4&gt;
&lt;p&gt;Nothing fancy, but it gets the project up and running. It should be noted that
a lot of FlashPunk documentation and tutorials are useful when trying to learn
HaxePunk -- they usually don&#39;t match perfectly, but the class and method names
are mostly the same and available in both, so it&#39;s easy to pickup things in
snippets.&lt;/p&gt;</description>
        <pubDate>Sat, 02 Mar 2013 05:00:00 GMT</pubDate>
        <guid isPermaLink="false">tag:joelkleier.com,2013-03-02:/2013/03/setting-up-a-haxepunk-project</guid>
    </item>
        
            <item>
        <title>Apathy post-mortem</title>
        <link>http://joelkleier.com/2013/01/apathy-post-mortem/</link>
        <description>&lt;p&gt;Well, voting is over for the &lt;a href=&#34;http://ludumdare.com/compo&#34; title=&#34;Ludum Dare 48-hour Competition&#34;&gt;25th Ludum Dare 48-hour competition&lt;/a&gt; and my game &lt;a href=&#34;http://www.ludumdare.com/compo/ludum-dare-25/?action=preview&amp;amp;uid=7263&#34; title=&#34;&#39;Apathy&#39; Ludum Dare Entry&#34;&gt;&#34;Apathy&#34;&lt;/a&gt; came in
a solidly in the middle of the pack.&lt;/p&gt;
&lt;p&gt;No ratings under 2.3, and I even had 1 rating over 3! Definitely better than my previous entries.&lt;/p&gt;
&lt;p&gt;The selected theme this time around was &#34;You are the enemy.&#34;&lt;/p&gt;
&lt;p&gt;I used &lt;a href=&#34;http://haxe.org&#34;&gt;Haxe&lt;/a&gt;/&lt;a href=&#34;http://haxenme.org&#34;&gt;NME&lt;/a&gt; + &lt;a href=&#34;http://haxepunk.com&#34;&gt;HaxePunk&lt;/a&gt; to write a Flash game. If you&#39;re interested, the &lt;a href=&#34;https://github.com/zombified/ld48-25&#34; title=&#34;&#39;Apathy&#39; source code hosted on Github&#34;&gt;source&lt;/a&gt; is
hosted on github.&lt;/p&gt;
&lt;h4&gt;What went wrong?&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;The subject matter of my game came to life for me. I was definitely struggling with some depressive
     and apathetic feelings. Never a good place to be. This sucked up a lot of my time and energy, which,
     I think, led to a stunted experience.&lt;/li&gt;
&lt;li&gt;What the win condition represented was, perhaps, a little to abstract or vague for many of the players to
     understand. The player was a manifestation of apathy -- if the player moved around and tried to &#34;play&#34;,
     they would be engaged, and not apathetic. Since the player is a manifestation of apathy, though, this
     means the player is losing. The win condition was not to care, and to simply not play. After a time,
     apathy wins out because the player didn&#39;t care.&lt;/li&gt;
&lt;li&gt;Not enough shiny.&lt;/li&gt;
&lt;li&gt;Sound and music could have been improved.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;What went right?&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;I came up with a pretty simple concept fairly quickly&lt;/li&gt;
&lt;li&gt;I used some pretty spiffy libs that I had some prior experience with&lt;/li&gt;
&lt;li&gt;Good sleep + good food + good communication with the people in my life&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;What can I do better?&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;I need to learn how to make some music, or find a better source for music. The tool I&#39;m using (autotracker-bu)
     is starting to sound the same and get a little old. It&#39;s output also doesn&#39;t really fit with the
     concept of some of the games I want to make. However, I do have to say it is an awesome little utility
     none-the-less.&lt;/li&gt;
&lt;li&gt;On a personal level, I need to develop some mental tools to help push through the feeling of apathy
     myself. It can be a tough enemy.&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Mon, 14 Jan 2013 05:00:00 GMT</pubDate>
        <guid isPermaLink="false">tag:joelkleier.com,2013-01-14:/2013/01/apathy-post-mortem</guid>
    </item>
        
            <item>
        <title>Game-Off 2012 Followup</title>
        <link>http://joelkleier.com/2012/11/game-off-2012-followup/</link>
        <description>&lt;p&gt;&lt;a href=&#34;http://joelkleier.com/posts/2012/10/game-off-2012.html&#34;&gt;Last time&lt;/a&gt; I talked about getting into Github&#39;s game-off-2012 contest and I exclaimed
how I would blog about my trials and tribulations. Well, it&#39;s been a month and there&#39;s been nothing
but radio silence! I&#39;ll change that here.&lt;/p&gt;
&lt;p&gt;A month is a long time to use to create a prototype, however, I did a few stupid things and won&#39;t
be able to enter the contest.&lt;/p&gt;
&lt;h4&gt;What Went Right&lt;/h4&gt;
&lt;h5&gt;Effort&lt;/h5&gt;
&lt;p&gt;I was able to dedicate a lot of my spare time to this project and didn&#39;t alienate my friends,
family, or significant other. I think the key take away for me is that I was able to use the
time I set aside for this project wisely. The rest of my life didn&#39;t suffer because I was able
to fully concentrate on what I needed to do in 2-3 hour uninterrupted blocks.&lt;/p&gt;
&lt;p&gt;The only thing that suffered a little is my sleeping habbits, but more on that when I discuss
what went wrong.&lt;/p&gt;
&lt;h5&gt;Pretty solid start&lt;/h5&gt;
&lt;p&gt;When all is said and done, I have a pretty solid starting point to a finished game.&lt;/p&gt;
&lt;p&gt;There is a good rule of thumb out there, &#34;don&#39;t make an engine, make a game&#34;. While I did suffer
from putting a lot of my effort into switching languages and libraries in the beginning, I never
put effort into designing an engine, it was all very specific for the game. The way I coded,
I put some thought into where I might be able to refactor things later, but I never let it
expand to a more general case.&lt;/p&gt;
&lt;p&gt;In the end, I created a component/entity framework in the vein of &lt;a href=&#34;http://craftyjs.com/&#34; title=&#34;Crafty.js&#34;&gt;Crafty&lt;/a&gt;. I didn&#39;t stick
with crafty because I didn&#39;t like some of the projects design decisions, like focusing on both
DOM and Canvas rendering techniques and trying to be a general case for a wide range of browsers.&lt;/p&gt;
&lt;p&gt;Really, at this point, I want to target the latest stable of just Chrome and Firefox, and I want
to focus on using the canvas to display all game content.&lt;/p&gt;
&lt;p&gt;Now, when I say &#34;component/entity framework&#34; I really mean that I created about 100 lines of
javascript containing 3 things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A function for registering a component&lt;/li&gt;
&lt;li&gt;A function for creating an entity from a list of components&lt;/li&gt;
&lt;li&gt;A method that implements a publish/subscribe pattern for all entities (and a global game object)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Perhaps I&#39;ll write more about it in the future, it probably deserves it&#39;s own post.&lt;/p&gt;
&lt;h4&gt;What Went Wrong&lt;/h4&gt;
&lt;h5&gt;Technology Switching&lt;/h5&gt;
&lt;p&gt;This was my biggest setback.&lt;/p&gt;
&lt;p&gt;I started off strong, using Haxe+Haxepunk. By November 1st, I found
that I did not enjoy developing in haxe -- I do not know AS3, I do not know the flash libs,
I do not use windows, and I don&#39;t really have a feel for the community.&lt;/p&gt;
&lt;p&gt;Great stuff, I got quite a bit done. However, when I hit a wall, I was quickly discouraged
and switched gears to my old friend, javascript.&lt;/p&gt;
&lt;p&gt;I started off messing with &lt;a href=&#34;http://craftyjs.com/&#34; title=&#34;Crafty.js&#34;&gt;Crafty.js&lt;/a&gt;, a really spiffy little component-entity based
engine. I think I could have got a lot done with it, but there were a few things I ran into
that made me want to switch off of it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;More a matter of taste: I wasn&#39;t planning on ever doing DOM based rendering
     and I felt like there were to many concessions to trying to handle both DOM
     and canvas.&lt;/li&gt;
&lt;li&gt;I didn&#39;t like how their module system tried to make you use hosted files. Easily
     worked around, and still a matter of taste, but I didn&#39;t like it.&lt;/li&gt;
&lt;li&gt;Assets: only a handful of image and audio formats are covered by the asset manager,
     and there&#39;s no way to really extend the main code from your own project without
     jumping through hoops that you really shouldn&#39;t need to.&lt;/li&gt;
&lt;li&gt;The documentation sucks, there&#39;s a bunch of pages that don&#39;t show anything, and the
     documentation for the framework itself didn&#39;t really explain much sometimes.&lt;/li&gt;
&lt;li&gt;Demo&#39;s are not of a quality that I would expect.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, after working through that for a bit, I thought I might fall back to &lt;a href=&#34;http://www.melonjs.org/&#34; title=&#34;melonJS&#34;&gt;melonJS&lt;/a&gt;,
which I&#39;ve used before and enjoyed. I didn&#39;t get very far into using this library though.
The time waster here was that I considered it at all.&lt;/p&gt;
&lt;p&gt;After working with the good bits of Crafty, going to melonJS felt like I was going
backwards a bit. Let me say, melonJS is a great framework that provides great support
for &lt;a href=&#34;http://www.mapeditor.org/&#34; title=&#34;Tiled&#34;&gt;Tiled&lt;/a&gt;/TMX maps and has pretty much everything you need to make a solid javascript
based game. Crafty, at its core, just felt like a better way to design a game in javascript.&lt;/p&gt;
&lt;p&gt;This is when I decided that I could probably create a core like Crafty&#39;s fairly quickly,
and I could probaby convert most of the audio, asset, scene, input, etc, code I&#39;ve already
written for other projects into this sort of design.&lt;/p&gt;
&lt;p&gt;I was right about that, but my timeline suffered, and then some life stuff popped up, and
I stopped working on the game for almost a week. Bam. Out of the contest.&lt;/p&gt;
&lt;p&gt;If I had started from the beginning with what I have now? Probably would be polishing
a prototype by now.&lt;/p&gt;
&lt;h5&gt;Rewriting Core Code&lt;/h5&gt;
&lt;p&gt;The second biggest setback was doing rewrites of portions of the core of my code. Avoidable?
Maybe, but the rewrites were inevitable, and they really did prevent a lot of time and pain
spent on things that would get changed later anyway.&lt;/p&gt;
&lt;h5&gt;Not enough up-front design&lt;/h5&gt;
&lt;p&gt;I think I could have put together a better design doc for the game itself. With no clear
path, and so much time on my hands, I tended to focus more on the techical side of the
game, and less on the visuals, interaction, and general game design.&lt;/p&gt;
&lt;h5&gt;Sleep&lt;/h5&gt;
&lt;p&gt;While I was able to put a lot of spare-time effort into this game, and was able to avoid
alienating anyone in my life, my sleep schedule suffered for it. This made me rely on
caffinated and sugary drinks to stay alert and active, which did nothing good for my health.&lt;/p&gt;
&lt;p&gt;I&#39;m happy to say there was never a point where I was sleep deprived -- I never got less than
between 5 or 6 hours of sleep. But that takes a toll when you&#39;re body likes having even just
slightly more than that (I usually feel fine with between 6.5 and 7.5 hours).&lt;/p&gt;
&lt;h4&gt;Where to go from here&lt;/h4&gt;
&lt;p&gt;I&#39;ll be continuing this project even if I can&#39;t complete it for the contest. I think it
has potential, and it has been quite enjoyable.&lt;/p&gt;
&lt;p&gt;I have a lot more to do, so I&#39;m &lt;del&gt;sure&lt;/del&gt; hopeful that I&#39;ll be writing more posts about
it in the future!&lt;/p&gt;</description>
        <pubDate>Thu, 29 Nov 2012 05:00:00 GMT</pubDate>
        <guid isPermaLink="false">tag:joelkleier.com,2012-11-29:/2012/11/game-off-2012-followup</guid>
    </item>
        
            <item>
        <title>Game-Off 2012 and some Haxe/NME+HaxePunk</title>
        <link>http://joelkleier.com/2012/10/game-off-2012-and-some-haxe-nme+haxepunk/</link>
        <description>&lt;p&gt;&lt;strong&gt;Edit (2013-03-06):&lt;/strong&gt; moved haxe related stuff to a &lt;a href=&#34;/posts/2012/10/haxepunk-linearpath-tween.html&#34;&gt;different post&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Github Game-Off 2012&lt;/h5&gt;
&lt;p&gt;&lt;a href=&#34;http://github.com&#34;&gt;Github&lt;/a&gt; is hosting a game making &lt;a href=&#34;http://github.com/github/game-off-2012&#34; title=&#34;Game-Off 2012 Repository&#34;&gt;competition&lt;/a&gt; through the month of November.&lt;/p&gt;
&lt;p&gt;It needs to be playable in a web browser, and needs to have some relation to
&#34;branching&#34;, &#34;forking&#34;, &#34;cloning&#34;, &#34;pushing&#34;, or &#34;pulling&#34;.&lt;/p&gt;
&lt;p&gt;Sounds like fun, I think I&#39;m in :)&lt;/p&gt;
&lt;p&gt;I&#39;ll blog about my trials and tribulations here, so expect to see more posts
about this project.&lt;/p&gt;
&lt;p&gt;So far I&#39;ve settled on a few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The game is going to be heavily influenced by &lt;a href=&#34;http://github.com&#34;&gt;Hero Quest&lt;/a&gt;, one of my
    all-time favorite board games&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The game will be broadly considered a &#34;tactical rpg&#34; with less of an emphasis
    on some of the typical staples from RPG&#39;s that I tend to find tedious:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&#39;s no explicit traveling -- IE the goal of the game will be to finish
    the level, for whatever goals the level has. Transition between levels will be
    the purview of narrative occuring between levels.&lt;/li&gt;
&lt;li&gt;All equipment will be purchased through a between-level store mechanism&lt;/li&gt;
&lt;li&gt;There are 2 stats: Offense/Defense. Might end up calling them something else, 
    but &#39;Offense&#39; and &#39;Defense&#39; describes their purpose fairly well. These stats
    can be modified by equipment, and, very slowly, experience overtime.&lt;/li&gt;
&lt;li&gt;Experience is rewarded at the end of a mission -- each mission has a base
    amount of experience to give to each character that survives, and then each
    character gets a small amount of experience per enemy slain, chest opened,
    secret found, and item retrieved.&lt;/li&gt;
&lt;li&gt;No equipment can be found in the levels. Anything found is essentially money
    and experience.&lt;/li&gt;
&lt;li&gt;There will be no &#39;looting&#39; -- IE the environment will not contains barrels,
    chests, etc, that are only their to smash or open. Chests will be special
    and only contain rare items that can be converted to money at the end of the
    mission.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&#39;ll be making the game in &lt;a href=&#34;http://haxe.org&#34;&gt;Haxe&lt;/a&gt;/&lt;a href=&#34;http://haxenme.org&#34;&gt;NME&lt;/a&gt;, and I&#39;ll be taking advantage of
    &lt;a href=&#34;http://haxepunk.com&#34;&gt;HaxePunk&lt;/a&gt;. Sadly, the html5 build for NME seems not to like how HaxePunk is
    made, so I&#39;ll be putting out a flash version of the game for the competition.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My immediate goal for this next week is to get the basic game play prototyped out, IE,
I want a map displaying with boundaries, and character movement, and combat. That&#39;s
glossing over a lot of details, but it comes down to that.&lt;/p&gt;</description>
        <pubDate>Mon, 29 Oct 2012 05:00:00 GMT</pubDate>
        <guid isPermaLink="false">tag:joelkleier.com,2012-10-29:/2012/10/game-off-2012-and-some-haxe-nme+haxepunk</guid>
    </item>
        
            <item>
        <title>HaxePunk LinearTween Example</title>
        <link>http://joelkleier.com/2012/10/haxepunk-lineartween-example/</link>
        <description>&lt;p&gt;&lt;strong&gt;Edit (2013-03-06):&lt;/strong&gt; fixed signature for callback/event listener and move this to it&#39;s own post&lt;/p&gt;
&lt;h5&gt;HaxePunk Tweens&lt;/h5&gt;
&lt;p&gt;While exploring &lt;a href=&#34;http://haxepunk.com&#34;&gt;HaxePunk&lt;/a&gt;, I discovered that sometimes documentation can be a
little lacking. So I just wanted to write this down for future reference:&lt;/p&gt;
&lt;p&gt;Tweening is pretting simple. Each &lt;em&gt;com.haxepunk.World&lt;/em&gt; and &lt;em&gt;com.haxepunk.Entity&lt;/em&gt; is
what is called a &lt;em&gt;Tweener&lt;/em&gt; (&lt;em&gt;com.haxepunk.Tweener&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;There are already a bunch of different tweens in the com.haxepunk.tweens.* namespace.&lt;/p&gt;
&lt;p&gt;Specifically, if you want to do motion, based on a path a character has to take, you
can use the &lt;em&gt;com.haxepunk.tweens.motion.LinearPath&lt;/em&gt; tween.&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;begin()&lt;/em&gt; method of an Entity you can do something like this:&lt;/p&gt;
&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// assuming _movetween is defined elsewhere in the class, and&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// com.haxepunk.tweens.motion.LinearPath as been imported&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;_movetween&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LinearPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tweenEnds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addPoint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// starting point&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addPoint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// left 32px&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addPoint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// left 32px, up 32px, ending point&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setMotion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// do this in .5 seconds&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addTween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The &lt;em&gt;tweenEnds&lt;/em&gt; parameter is just a reference to a function called when the tween ends:&lt;/p&gt;
&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tweenEnds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Dynamic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// set the final x/y values here since the update() method,&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// as detailed below, won&amp;#39;t set the final variables since the IDLE&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// state is being started&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;To call this, you just put something like the following in an Entities &lt;em&gt;update()&lt;/em&gt; method:&lt;/p&gt;
&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startmoving&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MOVING&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// reset the tween to the beginning and start running it&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// the tween will contain the x and y values that are desired at a particular&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// point in time during the tween, and remember, you don&amp;#39;t want to set the x&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// and y values immediately after calling start() on the tween -- it&amp;#39;ll give&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// you a &amp;quot;hiccup&amp;quot; where your Entity moves to the final spot, then jumps&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// back and progresses allong the LinearPath.&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_movetween&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Hopefully this has given a little insight for someone (like my future self) on how to
use HaxePunk tweens.&lt;/p&gt;</description>
        <pubDate>Mon, 29 Oct 2012 05:00:00 GMT</pubDate>
        <guid isPermaLink="false">tag:joelkleier.com,2012-10-29:/2012/10/haxepunk-lineartween-example</guid>
    </item>
        
            <item>
        <title>LD48</title>
        <link>http://joelkleier.com/2012/10/ld48/</link>
        <description>&lt;p&gt;The 24th &lt;a href=&#34;http://www.ludumdare.com&#34; title=&#34;Ludum Dare&#34;&gt;Ludum Dare&lt;/a&gt; has come and gone, and now it&#39;s time for me to take a look back
and my entry &lt;a href=&#34;http://www.ludumdare.com/compo/ludum-dare-24/?action=preview&amp;amp;uid=7263&#34; title=&#34;And Thus She Spake Entry Page&#34;&gt;&#39;And Thus She Spake&#39;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;http://github.com/zombified/ld48_24&#34; title=&#34;And Thus She Spake Source Code&#34;&gt;source&lt;/a&gt; is on github, if you&#39;d like a look.&lt;/p&gt;
&lt;h6&gt;What Went Right&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;I used tech I was, at the least, familiar with:&lt;ul&gt;
&lt;li&gt;Sublime Text 2&lt;/li&gt;
&lt;li&gt;LOVE&lt;/li&gt;
&lt;li&gt;bfxr&lt;/li&gt;
&lt;li&gt;Audacity&lt;/li&gt;
&lt;li&gt;autotracker-bu.py&lt;/li&gt;
&lt;li&gt;Schism Tracker&lt;/li&gt;
&lt;li&gt;GIMP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Preparation!&lt;/li&gt;
&lt;li&gt;I spent the time up front to get solid gameplay up and running&lt;/li&gt;
&lt;li&gt;I slept and ate normally&lt;/li&gt;
&lt;li&gt;No personal-life catastrophe&#39;s!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think this was my best LD48 game yet. I ended up picking and sticking with a tech stack that I knew --
granted, I don&#39;t know every piece all that &lt;em&gt;well&lt;/em&gt;, but I was familiar with everything. I had used it
all before, and was very comfortable with all the documentation there is.&lt;/p&gt;
&lt;p&gt;Even though I was familiar with the stack, I still prepared by building small programs focusing on
certain aspects I was less familiar with -- like audio. LOVE (because of SDL) has an issue with audio
clips bogging down the game when a lot are played. Eventually the sound cuts out all together. Because
I was making little test programs, I discoverred this issue and was able to work around it before
I was under the stress of the competition. Saved a couple hours of tinkering and reading.&lt;/p&gt;
&lt;p&gt;It took me a while to figure out the kind of game I wanted to make, but more on that later. After I
figured out a direction I wanted to go, instead of making a menu and adding in all the overhead right
away, I started immediately on the gameplay. I started just thinking that a game like Osmos would
be cool, but instead of trying to become the biggest on the map, you wanted to survive for the longest.
To do so, you would need to grow and shrink. I figured that just bigger and smaller circles would work
well for this -- you could get bigger by eating smaller circles, and get smaller by bumping larger
circles.&lt;/p&gt;
&lt;p&gt;I quickly discovered that it was kinda boring -- there was no real challenge. Once you got big enough,
you&#39;d fill the screen.&lt;/p&gt;
&lt;p&gt;This is when I thought of the concept of a circle that &lt;em&gt;always&lt;/em&gt; made you shrink, and grew in proportion
to your shrinkage. This introduced an obstacle that the player needs to avoid, which makes the game
a lot more challenging.&lt;/p&gt;
&lt;p&gt;Once I got all the sizes, speeds, and randomization tweaked, I was basically done with the gameplay,
and I felt that all the rest of my time could be spent on making the game look and sound good.&lt;/p&gt;
&lt;p&gt;During this whole process I was able to follow my normal routines, which felt great. Less stress from
staying up until 3am and eating like shit.&lt;/p&gt;
&lt;h6&gt;What Went Wrong (or, at least, not as good as it could have gone)&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Not a whole lot of polish and shine&lt;/li&gt;
&lt;li&gt;Rules were maybe a little two abstracted in terms of presentation to the user&lt;/li&gt;
&lt;li&gt;The game starts a little to hard, or perhaps it was too random&lt;/li&gt;
&lt;li&gt;It took me the better part of 5 hours to come up with an idea for a direction that I wanted to go&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To be honest with myself, I spent an inordinate amount of time creating and tweaking the font, and
I&#39;m happy with it, overall. I concentrated on the font, but then became kind of lax on making textures
for the circles, and coming up with a better game board. Overall, I spent almost no time on polishing
the UI, except for the fonts.&lt;/p&gt;
&lt;p&gt;I put each of the rules in a short quote from a fictional character (the &#34;She&#34; in &#34;And Thus She Spake&#34;),
but I suspect they ended up getting ignored, as most people just typed a name and jumped in to play. I
thought they were clever (maybe the low-side of clever, but at least a &lt;em&gt;little&lt;/em&gt; clever), but in
retrospect, they were just to abstract for the audience. And to be honest, I think I could have maybe
drawn in the reader a little more by forcing the player to read the text first in an intro sequence.&lt;/p&gt;
&lt;p&gt;But, easier might be to just be more straight forward with the rules. I dunno though, on the one
hand I think the abstraction of the rules makes it fun to figure out, on the otherhand, they weren&#39;t
really useful.&lt;/p&gt;
&lt;p&gt;Everything in the game is random, but it&#39;s randomized all at once, and in one lump group. There are
no stages and there is no proggression. There could still be randomization with stages/progression,
and I think it would have help players learn how to play a lot faster. Not sure if it would have
helped much though. I feel like it would have given the game a different flavor -- right now I think
it&#39;s a fast game you can pickup and get into really quick once you figure things out. There are no
levels, there&#39;s no progression, except your score. You, as a player, never need to feel like you
need to get anywhere in the game to have fun. The player has the same experience at the start of the
game as the end of the game.&lt;/p&gt;
&lt;p&gt;Perhaps a bigger barrier to entry, but a lot less cruft for experienced players.&lt;/p&gt;
&lt;p&gt;The worst part of the compentition was coming up with a concept for &#34;Evolution&#34;. I had lots of
ideas, but, honestly, I&#39;m not intimately familiar with genetic algorithims and AI, so everything
I thought of would be made x10 harder since I would have needed to spend a lot of time reading and
bug fixing.&lt;/p&gt;
&lt;h6&gt;What can I do to get better?&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Next time, I think I will push myself a little harder to spend more time on polish. If I&#39;m honest,
    I did have around 6-8 hours that I could have used to do more polish. My only excuse is that
    I needed to do some errands.&lt;/li&gt;
&lt;li&gt;To reduce the 5 hours it took to even think of a topic, I think maybe I should have a sketchbook
    ready in front of me ready to use. Perhaps not stop thumbnailing and drawing until the creative
    side of my brain figures something else.&lt;/li&gt;
&lt;li&gt;Perhaps even work on the gameplay a little longer.&lt;/li&gt;
&lt;li&gt;Have some basic things already lined up in libraries -- like code for menu UI and such.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other than that, I think to get better, I just need to make more games :D&lt;/p&gt;</description>
        <pubDate>Tue, 09 Oct 2012 05:00:00 GMT</pubDate>
        <guid isPermaLink="false">tag:joelkleier.com,2012-10-09:/2012/10/ld48</guid>
    </item>
        
            <item>
        <title>And so it begins LD48</title>
        <link>http://joelkleier.com/2012/08/and-so-it-begins-ld48/</link>
        <description>&lt;p&gt;Source can be found at &lt;a href=&#34;https://github.com/zombified/ld48-24&#34;&gt;github.com/zombified/ld48-24/&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;[20:00 August 24th]&lt;/h6&gt;
&lt;p&gt;Evolution.&lt;/p&gt;
&lt;p&gt;Let&#39;s see what I can do!&lt;/p&gt;
&lt;h6&gt;[23:38 August 24th]&lt;/h6&gt;
&lt;p&gt;Well, after a few hours of racking my brain, possibly a short nap, and some down time with the missus, I have an idea. Not a very complicated or original one, but one that I think has some potential.&lt;/p&gt;
&lt;p&gt;Here&#39;s a first look at it:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;FLOW, Screen Shot at 23:38 on 24 August 2012&#34; src=&#34;/pics/LD48_24_FLOW_201208242338.png&#34; title=&#34;FLOW&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Not much to see, and not much to do in it, but it&#39;s a start!&lt;/p&gt;
&lt;p&gt;Time for bed.&lt;/p&gt;
&lt;h6&gt;[6:45 August 25th]&lt;/h6&gt;
&lt;p&gt;Rested, and ready to go!&lt;/p&gt;
&lt;p&gt;My goal for today is to have the entirety of gameplay done:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eat small blobs, grow bigger&lt;/li&gt;
&lt;li&gt;Get hit by bigger blobs, grow smaller&lt;/li&gt;
&lt;li&gt;Start overlay&lt;/li&gt;
&lt;li&gt;Dead/End overlay&lt;/li&gt;
&lt;li&gt;Pause overlay&lt;/li&gt;
&lt;li&gt;Sounds&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My goal for tomorrow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix up the UI&lt;/li&gt;
&lt;li&gt;Add some animations&lt;/li&gt;
&lt;li&gt;Fancy shit up&lt;/li&gt;
&lt;li&gt;Add bonus and penalty blobs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&#39;m certain that my plans will change, but here goes nothing!&lt;/p&gt;
&lt;h6&gt;[7:30 August 25th]&lt;/h6&gt;
&lt;p&gt;Refactored some of my code a little, and added in some basic collision detection.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;FLOW, Screen Shot at 7:28 on 25 August 2012&#34; src=&#34;/pics/LD48_24_FLOW_20120825728.png&#34; title=&#34;Basic Collision Detection&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Now it&#39;s time for a shower and breakfast. Let&#39;s start this day off right!&lt;/p&gt;
&lt;h6&gt;[11:46 August 25th]&lt;/h6&gt;
&lt;p&gt;The game mechanics are shaping up nicely! I think there&#39;s a little more tweaking I want to do before I start on the menu&#39;s and sounds, but it&#39;s (IMO) quite enjoyable for a quick 5 minutes of play.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;FLOW, Screen Shot at 11:48 on 25 August 2012&#34; src=&#34;/pics/LD48_24_FLOW_201208251148.png&#34; title=&#34;You must survive!&#34;/&gt;&lt;/p&gt;
&lt;h6&gt;[14:04 August 25th]&lt;/h6&gt;
&lt;p&gt;I&#39;ve got the start and end screens functioning the way I want them, and I&#39;ve pretty much stopped tweaking the mechanic. I think it is good enough the more I play it. There&#39;s lots of things that I could add in to it... like a blob that would keep you the same size, an ability to push or pull all the blobs aound the mouse and such.&lt;/p&gt;
&lt;p&gt;I&#39;ve also come to think that the game is an analogy for life, so I&#39;m rolling with it.&lt;/p&gt;
&lt;p&gt;I do need to come up with a better name than &#39;FLOW&#39; though, as it&#39;s just my working title.&lt;/p&gt;
&lt;p&gt;Here&#39;s the death screen:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;FLOW, Screen Shot at 14:03 on 25 August 2012&#34; src=&#34;/pics/LD48_24_FLOW_201208251403.png&#34; title=&#34;Shit, you&#39;re dead.&#34;/&gt;&lt;/p&gt;
&lt;h6&gt;[18:13 August 25th]&lt;/h6&gt;
&lt;p&gt;Quick update before I eat dinner. I was going kinda slow this afternoon, but the &#34;high scores&#34; are displaying and the player can ether their name.&lt;/p&gt;
&lt;p&gt;I&#39;m going to work on a easter egg next... :)&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;FLOW, Screen Shot at 18:12 on 25 August 2012&#34; src=&#34;/pics/LD48_24_FLOW_201208251812.png&#34; title=&#34;The start screen&#34;/&gt;&lt;/p&gt;
&lt;h6&gt;[21:58 August 25th]&lt;/h6&gt;
&lt;p&gt;Added the easter egg! Not going to say what it is or post a screenshot of it, of course!&lt;/p&gt;
&lt;p&gt;Also added music. I am by no means a music guy, so it shouldn&#39;t surprise you that it&#39;s nothing fancy. Might add a little more tomorrow before I submit the game, but, honestly, I don&#39;t know.&lt;/p&gt;
&lt;p&gt;Since I spent most of my time on sound stuff, don&#39;t really have a screen shot!&lt;/p&gt;
&lt;p&gt;Next, I have a little intro text to put on the start screen, then we have to rename the project to something official like.&lt;/p&gt;
&lt;h6&gt;[0:28 August 26th]&lt;/h6&gt;
&lt;p&gt;Still going strong, decided to create a custom fixed-width font for more alignment!&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;FLOW, Screen Shot at 0:27 on 26 August 2012&#34; src=&#34;/pics/LD48_24_FLOW_201208260027.png&#34; title=&#34;A New Font&#34;/&gt;&lt;/p&gt;
&lt;h6&gt;[9:33 August 26th]&lt;/h6&gt;
&lt;p&gt;Woke up refreshed, had some eggs, and started digging into more polish!&lt;/p&gt;
&lt;p&gt;I added a death sound, made the text a little more readable, added an instruction on how to quit the game (which is probably error prone -- not really sure how to detect OSs/Window Managers well, so the arrow and message may be on the wrong side of the screen for releases like Kubuntu), and changed the title! It is now called &#34;And Thus She Spake&#34;.&lt;/p&gt;
&lt;p&gt;Here&#39;s a screen shot, you can see some of the updated text and the new title:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;And Thus She Spake, Screen Shot at 9:32 on 26 August 2012&#34; src=&#34;/pics/LD48_24_ANDTHUSSHESPAKE_201208260932.png&#34; title=&#34;And Thus She Spake&#34;/&gt;&lt;/p&gt;
&lt;h6&gt;[12:53 August 26th]&lt;/h6&gt;
&lt;p&gt;Well, with around 7 hours to go I&#39;ve finished bundling and releasing to the extent that I&#39;m going to do.&lt;/p&gt;
&lt;p&gt;Here&#39;s a link to the entry (just the preview, not the voting page): &lt;a href=&#34;http://www.ludumdare.com/compo/ludum-dare-24/?action=preview&amp;amp;uid=7263&#34;&gt;And Thus She Spake&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here&#39;s my releases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dl.dropbox.com/u/48144436/LD48/24/And%20Thus%20She%20Spake.love&#34;&gt;LÖVE File&lt;/a&gt; (Make sure to install [LÖVE] separatly)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dl.dropbox.com/u/48144436/LD48/24/AndThusSheSpake-osx.zip&#34;&gt;OS/X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dl.dropbox.com/u/48144436/LD48/24/AndThusSheSpake-win-x86.zip&#34;&gt;Win 32-bit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dl.dropbox.com/u/48144436/LD48/24/AndThusSheSpake-win-x64.zip&#34;&gt;Win 64-bit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linux users will have to install LÖVE separately and run the &lt;a href=&#34;https://dl.dropbox.com/u/48144436/LD48/24/And%20Thus%20She%20Spake.love&#34;&gt;LÖVE File&lt;/a&gt; as I am not familiar with bundling on those platforms, and there aren&#39;t any straight forward directions to follow to bundle for LÖVE.&lt;/p&gt;
&lt;p&gt;And one last screenshot:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;And Thus She Spake, Screen Shot at 12:20 on 26 August 2012&#34; src=&#34;/pics/LD48_24_ANDTHUSSHESPAKE_201208261220.png&#34; title=&#34;And Thus She Spake, Final Screen-Shot&#34;/&gt;&lt;/p&gt;</description>
        <pubDate>Fri, 24 Aug 2012 05:00:00 GMT</pubDate>
        <guid isPermaLink="false">tag:joelkleier.com,2012-08-24:/2012/08/and-so-it-begins-ld48</guid>
    </item>
        
            <item>
        <title>Ludum Dare 24</title>
        <link>http://joelkleier.com/2012/08/ludum-dare-24/</link>
        <description>&lt;p&gt;Every 4 months, or so, the folks over at &lt;a href=&#34;http://ludumdare.com&#34;&gt;ludum dare&lt;/a&gt; (LD) hold a couple of contests, one for individuals and one for teams. The contest is all about creating a game in 48 (solo) or 72 (team) hours.&lt;/p&gt;
&lt;p&gt;There is no prize for this contest, other than bragging rights and a prototype. Really the contest isn&#39;t about winning so much as it is about setting some time aside to do realize an idea or concept. But damnit, I want to get into the top 100 one of these times!&lt;/p&gt;
&lt;p&gt;This contest is important to me because it gets my mind off of normal work and let&#39;s me focus on an idea for more than an hour or two at a time. A nice clear goal is handy too: get a game done in 48 hours, or else! This is fantastic motivation, especially since there are a thousand other people doing the same thing as you, at the same time.&lt;/p&gt;
&lt;p&gt;So far, I&#39;ve entered two of the competitions -- the LD48 #22 and LD48 #23 -- and loved nearly every minute of both.&lt;/p&gt;
&lt;p&gt;For LD48 #22 I made a game called &lt;a href=&#34;http://www.ludumdare.com/compo/ludum-dare-22/?action=preview&amp;amp;uid=7263&#34; title=&#34;LD48 #22 Entry, &#39;ALONE with K.I.T.T.I.&#39;&#34;&gt;ALONE with K.I.T.T.I.&lt;/a&gt;. It was an attempt at a pseudo-rogue-like game using javascript. I used &lt;a href=&#34;http://melonjs.org&#34;&gt;melonjs&lt;/a&gt; for most of the heavy lifting, but I hadn&#39;t ever used it before the competition (except going through some of the code in the tutorial). I spent a lot of my time fighting with everything I didn&#39;t know about the framework.&lt;/p&gt;
&lt;p&gt;For LD48 #23 I made a game called &lt;a href=&#34;http://www.ludumdare.com/compo/ludum-dare-23/?action=preview&amp;amp;uid=7263&#34; title=&#34;LD48 #23 Entry, &#39;The Tiny World&#39;&#34;&gt;The Tiny World&lt;/a&gt;. It was an attempt at a text-based adventure game, again using javascript. This time I did everything from scratch, and while I was very familiar with the tools, even for a text adventure game, I spent a significant portion of time on developing the framework.&lt;/p&gt;
&lt;p&gt;This time around I really need to use a framework that&#39;s built for prototyping, and that I&#39;m familiar with. While I LOVE javascript, and I want to pursue it more, I think I&#39;d like to take a step back for LD48 #24, and try out the &lt;a href=&#34;http://love2d.org&#34;&gt;LÖVE&lt;/a&gt; framework. I&#39;m fairly familiar with it, and it&#39;s built to prototype. My biggest issue will be getting around Lua -- I just don&#39;t use it that often, and I&#39;m not as familiar as I&#39;d like to be with some of the advanced features of the language. Heck, there&#39;s still several days until the competition, plenty of time to brush up, right?&lt;/p&gt;
&lt;p&gt;Even if my next game still turns out to be complete shit, I&#39;m excited!&lt;/p&gt;
&lt;p&gt;If you don&#39;t have any plans, &lt;a href=&#34;http://ludumdare.com&#34;&gt;give it a shot&lt;/a&gt;, what&#39;s the harm?&lt;/p&gt;</description>
        <pubDate>Tue, 21 Aug 2012 05:00:00 GMT</pubDate>
        <guid isPermaLink="false">tag:joelkleier.com,2012-08-21:/2012/08/ludum-dare-24</guid>
    </item>
        </channel>
</rss>